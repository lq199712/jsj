<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd    
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd    
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- 对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.lq" />
	<!-- 服务已经由compent自动注入,显然是不行滴 -->
	<bean id="userService"
		class="com.lq.service.impl.UserServiceImpl">
	</bean>
	<!-- 要做的工作 -->
	<bean id="helloJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="userService"></property>
		<property name="targetMethod" value="sayHello"></property>
	</bean>
	<!-- 调度工作 -->
	<bean id="cronUserTigger"
		class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="helloJob"></property>
		<property name="cronExpression" value="0 0 11 25 3 ? "></property>
	</bean>


	<!-- 启动工作 -->
	<bean
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronUserTigger"></ref>
			</list>
		</property>
	</bean>



	<mvc:annotation-driven />
	<!-- 支持spring3.0新的mvc注解 -->
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0" />
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				</bean>
			</list>
		</property>
	</bean>


	<mvc:interceptors>
		<bean class="com.lq.interceptor.MyInterceptor"></bean>
		<!-- 拦截所有springmvc的url！ -->
		<mvc:interceptor>
			<mvc:mapping path="/user.do" />
			<!--<mvc:mapping path="/test/*" />-->
			<bean class="com.lq.interceptor.MyInterceptor2"></bean>
		</mvc:interceptor>
	</mvc:interceptors>




	<!--对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:suffix=".jsp">
		<!-- 如果使用jstl的话，配置下面的属性 -->
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>

	<!-- 处理文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf8" />
		<!-- 默认编码 (ISO-8859-1) -->
		<property name="maxInMemorySize" value="10240" />
		<!-- 最大内存大小 (10240)-->
		<property name="uploadTempDir" value="/upload/" />
		<!-- 上传后的目录名 (WebUtils#TEMP_DIR_CONTEXT_ATTRIBUTE) -->
		<property name="maxUploadSize" value="-1" />
		<!-- 最大文件大小，-1为无限止(-1) -->
	</bean>


</beans>
